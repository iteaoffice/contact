{% do headScript().appendFile('assets/js/codemirror.js', 'text/javascript') %}
{% do headScript().appendFile('assets/js/codemirror/sql.js', 'text/javascript') %}
{% do headScript().appendFile('assets/js/codemirror/selection-pointer.js', 'text/javascript') %}
{% do headScript().appendFile('assets/js/codemirror/matchbrackets.js', 'text/javascript') %}

{% do headScript().appendFile('//cdnjs.cloudflare.com/ajax/libs/mustache.js/3.1.0/mustache.js', 'text/javascript') %}

{% do headLink().appendStylesheet('assets/css/codemirror.css') %}

{% do headTitle().append(translate("txt-admin")) %}
{% do headTitle().append(translate("txt-edit-selection-%s")|format(selection)) %}

<h1>{{ translate("txt-edit-contacts-selection-%s")|format(selection) }} </h1>
{% do form.prepare() %}
{{ form().openTag(form)|raw }}

<div class="form-group row">
    <label class="col-sm-3 col-form-label">{{ translate("txt-selection") }}</label>

    <div class="col-sm-9">
        <p class="form-control-plaintext">{{ selectionLink(selection, 'view', 'name') }} {{ selectionLink(selection, 'edit', 'icon') }}</p>
    </div>
</div>

{{ ztbformelement(form.get('type')) }}

<div id="pane-sql" class="{% if not selectionService.isSql(selection) %}d-none{% endif %}">
    {{ ztbformelement(form.get('sql').setAttribute('class','')) }}
</div>

<div id="pane-fixed" class="{% if selectionService.isSql(selection) %}d-none{% endif %}">
    <div class="row">
        <div class="col">
            <h2>{{ translate("txt-current-selection") }}</h2>

            <table class="table table-sm table-hover table-striped">
                <tbody id="contacts-table"></tbody>
            </table>

            <input type="button" class="btn btn-outline-info" id="remove-all" value="{{ translate("txt-remove-all") }}">
            <input type="button" class="btn btn-outline-danger" id="reset" value="{{ translate("txt-reset") }}">
        </div>
        <div class="col">
            <h2>{{ translate("txt-choose-contacts") }}</h2>
            {{ selectionformelement(form.get('selection'), true) }}
            <input type="button" id="selection-search" class="mt-2 btn btn-outline-primary" value="Get selection">

            <div class="input-group pt-3">
                <input type="text" id="contact-search-string" placeholder="Search ..." class="form-control">
                <div class="input-group-append">
                    <input type="button" id="contact-search" class="btn btn-outline-primary" value="Search">
                </div>
            </div>
            <h2>{{ translate("txt-search-results") }}</h2>
            <table class="table table-sm table-hover table-striped">
                <tbody id="choose-contacts-table"></tbody>
            </table>
            <input type="button" class="btn btn-outline-success" id="add-all" value="{{ translate("txt-add-all") }}">
            <input type="button" class="btn btn-outline-danger" id="subtract" value="{{ translate("txt-subtract") }}">
        </div>
    </div>

    <div id="hidden-elements"></div>
</div>

<div class="form-group row">
    <div class="offset-sm-3 col-sm-9">
        {{ ztbformelement(form.get('submit')) }}
        {{ ztbformelement(form.get('cancel')) }}
        {% if form.has('delete') %}
            {{ ztbformelement(form.get('delete')) }}
        {% endif %}
    </div>
</div>

{{ form().closeTag()|raw }}


<script type="text/javascript">
    $(document).ready(function () {
        function getContacts($query) {
            $.post('{{ url('zfcadmin/contact/search') }}', {'q': $query}, function (result) {
                let $template = $('#contact-row-template');
                let html = Mustache.render($template.html(), {'contacts': result, 'type': 'plus'});
                $('#choose-contacts-table').html(html);
            });
        }

        function getContactsFromSelection($selection, $template) {
            $.post('{{ url('zfcadmin/selection/get-contacts') }}', {'id': $selection}, function (result) {
                let $contactTemplate = $('#contact-row-template');
                let html = Mustache.render($contactTemplate.html(), {'contacts': result.contacts, 'type': 'plus'});
                $template.html(html);
            });
        }

        $('#selection-search').click(function () {
            let $selection = $('#selection').val();
            getContactsFromSelection($selection, $('#choose-contacts-table'));
        });
        $('#contact-search').click(function () {
            let $query = $('#contact-search-string').val();
            getContacts($query, $('#choose-contacts-table'));
        });

        var $in = [];

        function init($selection) {
            $.post('{{ url('zfcadmin/selection/get-contacts') }}', {'id': $selection}, function (result) {
                $in = [];
                let $contactTemplate = $('#contact-row-template');
                let html = Mustache.render($contactTemplate.html(), {'contacts': result.contacts, 'type': 'minus'});

                result.contacts.forEach(function (contact) {
                    $in.push(contact.id);
                });

                $('#contacts-table').html(html);
                updateHiddenElements();
            });
        }

        init({{ selection.id }});

        function moveItem($element) {
            let $icon = $element.find('i');
            let $contactId = $element.data('id');

            if ($icon.hasClass('fa-plus') && $.inArray($contactId, $in) === -1) {
                $icon.addClass('fa-minus').removeClass('fa-plus');
                $in.push($contactId);
                $('#contacts-table').append($element);
            } else if ($icon.hasClass('fa-minus')) {
                $icon.addClass('fa-plus').removeClass('fa-minus');
                $in.remove($contactId);
                $('#choose-contacts-table').append($element);
            }
            updateHiddenElements();
        }

        function updateHiddenElements() {
            let $hiddenElementTemplate = $('#hidden-element-template');
            let html = Mustache.render($hiddenElementTemplate.html(), {'elements': $in});
            $('#hidden-elements').html(html);
        }

        $('.table').on('click', 'tr', function () {
            moveItem($(this));
        });

        $('#remove-all').click(function () {
            $('#contacts-table > tr').each(function () {
                moveItem($(this));
            });
        });

        $('#add-all').click(function () {
            $('#choose-contacts-table > tr').each(function () {
                moveItem($(this));
            });
        });
        $('#reset').click(function () {
            init({{ selection.id }});
            $('#choose-contacts-table').empty();
        });
        $('#subtract').click(function () {
            let $contactsChosen = [];
            $('#choose-contacts-table > tr').each(function () {
                $contactsChosen.push($(this).data('id'));
            });

            $('#contacts-table > tr').each(function () {
                if ($.inArray($(this).data('id'), $contactsChosen) !== -1) {
                    $in.remove($(this).data('id'));
                    $(this).remove();
                }
            });
            updateHiddenElements();
        });

        Array.prototype.remove = function () {
            let what, a = arguments, L = a.length, ax;
            while (L && this.length) {
                what = a[--L];
                while ((ax = this.indexOf(what)) !== -1) {
                    this.splice(ax, 1);
                }
            }
            return this;
        };
    });
</script>

{% verbatim %}
<template id="contact-row-template">
        {{#contacts}}
            <tr data-id="{{ id }}">
                <td>
                    <i class="fas fa-{{ type }}"></i>
                </td>
                <td>
                    <small class="text-muted">{{ id }}</small></td>
                <td>{{ name }}</td>
                <td>{{ organisation }}</td>
            </tr>
         {{/contacts}}
</template>
<template id="hidden-element-template">
        {{#elements}}
            <input type="hidden" name="contacts[]" value="{{ . }}">
        {{/elements}}
</template>
{% endverbatim %}


<script type="text/javascript">
    var $htmlEditor = CodeMirror.fromTextArea(document.getElementById("sql"), {
        mode: "sql",
        lineNumbers: true,
        selectionPointer: true,
        lineWrapping: true,
        matchBrackets: true
    });
    $htmlEditor.setSize(null, 600);

    $('input[type=radio][name=type]').change(function () {
        if (this.value === '1') {
            $('#pane-sql').removeClass('d-none');
            $('#pane-fixed').addClass('d-none');
            $htmlEditor.refresh();
        }

        if (this.value === '2') {
            $('#pane-sql').addClass('d-none');
            $('#pane-fixed').removeClass('d-none');
        }
    });
</script>